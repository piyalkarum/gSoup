// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// calc_nuc_div_theta
List calc_nuc_div_theta(CharacterMatrix dna_matrix, bool pairwise_deletion, std::string model);
RcppExport SEXP _gSoup_calc_nuc_div_theta(SEXP dna_matrixSEXP, SEXP pairwise_deletionSEXP, SEXP modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type dna_matrix(dna_matrixSEXP);
    Rcpp::traits::input_parameter< bool >::type pairwise_deletion(pairwise_deletionSEXP);
    Rcpp::traits::input_parameter< std::string >::type model(modelSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_nuc_div_theta(dna_matrix, pairwise_deletion, model));
    return rcpp_result_gen;
END_RCPP
}
// calculate_pi
List calculate_pi(CharacterMatrix alignment);
RcppExport SEXP _gSoup_calculate_pi(SEXP alignmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type alignment(alignmentSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_pi(alignment));
    return rcpp_result_gen;
END_RCPP
}
// calculate_sfs_cpp
IntegerVector calculate_sfs_cpp(CharacterMatrix alignment);
RcppExport SEXP _gSoup_calculate_sfs_cpp(SEXP alignmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterMatrix >::type alignment(alignmentSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_sfs_cpp(alignment));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gSoup_calc_nuc_div_theta", (DL_FUNC) &_gSoup_calc_nuc_div_theta, 3},
    {"_gSoup_calculate_pi", (DL_FUNC) &_gSoup_calculate_pi, 1},
    {"_gSoup_calculate_sfs_cpp", (DL_FUNC) &_gSoup_calculate_sfs_cpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_gSoup(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
